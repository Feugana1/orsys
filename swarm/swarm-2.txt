Docker swarm 

—Se connecter sur l’interface https://labs.play-with-docker.com/ avec votre compte docker hub

—Créer 03 noeuds (node 1, node 2, node 3)

—Initialisation d’un noeud en tant que manager sur node 1
$ docker swarm init --advertise-addr 192.168.0.8
Swarm initialized: current node (y2srabgt1kvi4ystgnhnkumnl) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-3jd43pzz4lnps6ueau3rlwha1b7ycg1ws7w83gzvgo7piwllz4-6alaoxknuxqkb0gjgeyc7ccyf 192.168.0.8:2
377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

— Ajout d’un noeud en tant que worker (node 2 et node 3)
$ docker swarm join --token SWMTKN-1-3jd43pzz4lnps6ueau3rlwha1b7ycg1ws7w83gzvgo7piwllz4-6alaoxknuxqkb0gjgeyc7ccyf 192.168.0.8:2
377

This node joined a swarm as a worker.

— Labelisation des noeuds
docker node update --label-add mylabel=web node2
docker node update --label-add mylabel=bdd node2

— Depuis un noeud manager, executer la commande
% docker node ls
ID                            HOSTNAME         STATUS    AVAILABILITY   MANAGER STATUS   ENGINE VERSION
n5sfroc1fpp7qp9ehtgbuaymm *   docker-desktop   Ready     Active         Leader           25.0.3

— Depuis un noeud worker, executer la commande
$ docker node ls

— Promotion d’un noeud worker en tant que manager (node2)
$ docker node promote node2

— Depuis le node2, afficher la liste des noeuds
$ docker node ls

— Retirer un noeud des managers (node2)
$ docker node demote node2

— Supprimer un noeud du cluster swarm
$ docker node demote node2


— Deploielement d’un service 
$ docker service create --replicas 1 --name infinite-loop nginx

% docker service ls


% docker service scale infinite-loop=5
infinite-loop scaled to 5
overall progress: 5 out of 5 tasks
1/5: running   [==================================================>]
2/5: running   [==================================================>]
3/5: running   [==================================================>]
4/5: running   [==================================================>]
5/5: running   [==================================================>]
verify: Service converged

% docker service ls
ID             NAME         MODE         REPLICAS   IMAGE           PORTS
n5zmwwjtvkiq   infinite-loop   replicated   5/5        alpine:latest


% docker service scale infinite-loop=3
infinite-loop scaled to 3
overall progress: 3 out of 3 tasks
1/3: running   [==================================================>]
2/3: running   [==================================================>]
3/3: running   [==================================================>]
verify: Service converged

% docker service ps infinite-loop
ID             NAME           IMAGE           NODE             DESIRED STATE   CURRENT STATE           ERROR     PORTS
b6gxmblx86z4   infinite-loop.1   alpine:latest   docker-desktop   Running         Running 4 minutes ago
nyfwn2ssevjn   infinite-loop.2   alpine:latest   docker-desktop   Running         Running 2 minutes ago
sexs1806i7rs   infinite-loop.3   alpine:latest   docker-desktop   Running         Running 2 minutes ago

Suppression du service
% docker service rm infinite-loop


Déploiement du service sur un noeud précis
docker service create --name web --constraint 'node.labels.mylabel == web’ nginx

Déploiement du service sur un noeud précis
docker service create --name web --constraint 'node.labels.mylabel == bdd’ nginx


